Commands per object type;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Revision date:;yyyy-mm-dd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;Obs! Leading - should not exist in protocol level;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Functional position;;;;argument;;;;;argument;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
ObjectType;Object (optional);commandCodeId;Description;Name;Command;Type;Value;Comment;Name;Command;Type;Value;Comment;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Functional state;;;;argument;;;;;argument;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
ObjectType;Object (optional);commandCodeId;Description;Name;Command;Type;Value;Comment;Name;Command;Type;Value;Comment;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Manouver;;;;argument;;;;;argument;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
ObjectType;Object (optional);commandCodeId;Description;Name;Command;Type;Value;Comment;Name;Command;Type;Value;Comment;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Parameter;;;;argument;;;;;argument;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
ObjectType;Object (optional);commandCodeId;Description;Name;Command;Type;Value;Comment;Name;Command;Type;Value;Comment;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0001;"Sets functional position.
Sets the controller to yellow flash, dark mode or normal control.
Requires security code 2.";status;setValue;string;"-NormalControl
-YellowFlash
-Dark";"Set operating mode
NormalControl: Normal Control
YellowFlash: Enables yellow flash
Dark: Enables dark mode";securityCode;setValue;string;[string];"Security code 2
";timeout;setValue;integer;[0-1440];"Time in minutes until controller automatically reverts to previous functional position.
0=no automatic return
";intersection;setValue;integer;[0-255];"Intersection number
";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0002;"Sets current time plan.
Change of traffic program of the traffic light controller.
Typical usages is scenario based control where change of program is used to change signal timings etc.
This command changes the signal timings for optimal traffic flow.
Requires security code 2";status;setPlan;boolean;"-False
-True";"False: Controller uses time plan according to programming
True: Controller uses time plan according to command";securityCode;setPlan;string;[string];"Security code 2
";timeplan;setPlan;integer;[1-255];"designation of time plan
";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0003;"Sets traffic situation the controller uses.
Used for area-based control where a command can be sent to a master traffic light controller about which predefined traffic situation to use (1-255).
Traffic situation is a concept used to divide multiple TLC's into areas and sub-areas. The traffic situation gives the possibility to change the TLC sub-area dynamically depending on the time of day and the traffic flow. Depending on the traffic situation each TLC selects the time plan dynamically.
Requires security code 2";status;setTrafficSituation;boolean;"-False
-True";"False: Controller uses traffic situation according to own programming
True: Controller uses traffic situation according to command";securityCode;setTrafficSituation;string;[string];"Security code 2
";traficsituation;setTrafficSituation;integer;[1-255];"designation of traficsituation
";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0004;"Restarts Traffic Light Controller.
Used in the event of serious faults in the device where a restart is considered to be able to remedy a problem.
Requires security code 2";status;setRestart;boolean;"-False
-True";True: Restart controller;securityCode;setRestart;string;[string];"Security code 2
";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0005;"Activate emergency route.
The function is made for emergency prioritization. Works in the same way as the M0006 and M0008 where the traffic light controller responds to an input.
Should be used in situations where full priority is given in the emergency vehicle program.
Requires security code 2.";status;setEmergency;boolean;"-False
-True";"False: Deactivate emergency route
True: Activate emergency route";securityCode;setEmergency;string;[string];"Security code 2
";emergencyroute;setEmergency;integer;[1-255];"Number of emergency route
";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0006;"Activate input.
Set given input (1-255) of the controllers general purpose I/O to either true or false.
The function can provide an input to the traffic light controller on which a predefined action can be taken.
Can be used for all types of input where the traffic light controller must react to external control.
Typical usages are bus priority, coordination between traffic controllers, external control systems, and much more.
Requires security code 2.";status;setInput;boolean;"-False
-True";"False: Deactivate input
True: Activate input";securityCode;setInput;string;[string];"Security code 2
";input;setInput;integer;[1-255];"Number of Input
";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0007;"Activate fixed time control.
Deactivates the traffic actuated control using detectors and activates pre-timed control.
Can be used in case normal detectors can't be used, e.g. during maintenance work.
Requires security code 2.";status;setFixedTime;boolean;"-False
-True";"False: Deactivate fixed time control
True: Activate fixed time control";securityCode;setFixedTime;string;[string];"Security code 2
";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Detector logic;;M0008;"Sets manual activation of detector logic.
Set given detector logic (1-255) to either true or false.
Can e.g. be used to connect RSMP compatible detection equipment to the traffic light controller. Can also be used for prioritization.
Requires security code 2";status;setForceDetectorLogic;boolean;"-False
-True";"False: Deactivate manual control of detector logic
True: Activate manual control of detector logic";securityCode;setForceDetectorLogic;string;[string];"Security code 2
";mode;setForceDetectorLogic;boolean;"-False
-True";"False: Deactivate detector logic
True: Activate detector logic";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Signal group;;M0010;Reserved;status;setStart;boolean;"-False
-True";Reserved;securityCode;setStart;string;[string];Reserved;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Signal group;;M0011;Reserved;status;setStop;boolean;"-False
-True";Reserved;securityCode;setStop;string;[string];Reserved;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0012;Reserved;status;setStart;string;[string];Reserved;securityCode;setStart;string;[string];Reserved;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0013;"Activate a series of inputs

Set given inputs (1-255) of the controllers general purpose I/O to either true or false. This command was introduced due to coordination requirements needing to set many inputs to true/false at the same time and M0006 being to slow to send a message for each input individually. With this command many inputs can be set to true/false at the same time using a single command message. It can be used for all types of input where the traffic light controller must react to external control. Typical usages are bus priority, coordination between traffic controllers, external control systems, and much more.

Requires security code 2.

The parameter ‘status’ sets/unsets a block of 16 inputs at a time. It can be repeated to set several blocks of 16 inputs. Values are separated with comma. Blocks are separated with semicolon. Format: [Offset];[Bits to set];[Bits to unset];…

- ‘Offset’ defines where the 16 inputs starts from
- ‘Bits to set’ defines which bit(s) to set. ‘0’ if unused
- ‘Bits to unset’ defines which bit(s) to unset. ‘0’ if unused

Example 1:
“3,4134,65” sets input 4,5,8,15 and unsets 3,9
- Input starts from no. 5
- “4134” is 1 0000 0010 0110 in binary, but since input starts from 3, it is shifted 3 bits, e.g. 1000 0001 0011 0000 which are bits 4,5,8,15
- “65” is 100 0001 in binary, but since input starts from 3, it is shifted 3 bits, e.g. 10 0000 1000 which are bits 3,9

Example 2:
“12,1,4” sets input 12 and unsets 14
- Input starts from no. 12
- “1” is 1 in binary, but since input starts at 12 it is shifted 12 bits, e.g. 1 0000 0000 0000, which is bit 12
- “4” is 100 in binary, but since input starts at 12 it is shifted 12 bits, e.g. 100 0000 0000 0000, which is bit 14

And both these examples could be sent in the same message as: “3,4143,65;12,1,4”

Such a message would set input 4,5,8,12,15 and unset input 3,9,14

Example 3:
“0,1,2” sets input 0 and unsets 1
- Input starts from 0
- “1” is 1 in binary, which is bit 0
- “2” is 10 in binary, which is bit 1";status;setInput;string;[string];"Sets/Unsets a block of 16 inputs at a time. Can be repeated to set several blocks of 16 inputs. Values are separated with comma. Blocks are separated with semicolon.
Format: [Offset];[Bits to set];[Bits to unset];…
";securityCode;setInput;string;[string];"Security code 2
";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0014;"Set dynamic bands.
Can be used to change between predefined signal timings. Moves the start of signal groups in the cycle.
This command can be used to change the split of green time during the cycle. A typical usage is scenario based control where changing of signal timings is used for optimal traffic flow.
Requires security code 2";plan;setCommands;integer;[0-255];"Plan to be changed
";status;setCommands;string;[string];"Dynamic bands.
Each dynamic band are written as dd-ee where:
dd=Dynamic band number (from 1-10)
ee=Extension in seconds in this band

Each dynamic band is separated with a comma.

E.g.
dd-ee,dd-ee
";securityCode;setCommands;string;[string];"Security code 2
";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0015;"Set Offset time.
Offset time is used to define an offset between intersections in coordinated control. It is based on the expected travel time between intersections.
This command can be used to fine tune the coordination for optimal traffic flow.
Requires security code 2.";status;setOffset;integer;[0-255];"Set offset time in seconds
";plan;setOffset;integer;[0-255];"Time plan nr
";securityCode;setOffset;string;[string];"Security code 2
";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0016;"Set week time table.
Set which time table for signal programs to use for each day during a week.
This command changes the signal timings during the week for optimal traffic flow.
Requires security code 2.";status;setWeekTable;string;[string];"Week time table. Defines time table to use for each week day
Each segment is written as d-t where:
d=day of week
t=time table nr

Day of week legend:
0=Monday
1=Tuesday
2=Wednesday
3=Thursday
4=Friday
5=Saturday
6=Sunday

Each segment is separated with a comma

E.g.
d-t,d-t
";securityCode;setWeekTable;string;[string];"Security code 2
";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0017;"Set time tables.
Set time of day for when to automatically switch signal program (time plan).
This command changes the signal timings according to time of day for optimal traffic flow.
Requires security code 2.";status;setTimeTable;string;[string];"Time Table. Defines time tables.
Each time definition is written as t-o-h-m where:
t=time table nr (1-12)
o=function
h=hour - switching time
m=minute - switching minute

Function legend:
0=no plan is selected by time table
1=set plan 1
…
16= set plan 16

hour and minute is using local time (not UTC)

Each time definition is separated with a comma.

E.g.
t-o-h-m,t-o-h-m
";securityCode;setTimeTable;string;[string];"Security code 2
";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0018;"Set Cycle time.
Cycle time (or cycle length) is the sum of all phases in a time plan (traffic program). This time is fixed when using fixed time control or coordination (except ""local coordination""). When the cycle counter reaches this length it is reset back to zero.
This command provides the ability to change the cycle time when using coordinated or fixed time control. It changes the timings for optimal traffic flow. Can be used with scenario based control.
Requires security code 2.";status;setCycleTime;integer;[1-255];"Set cycle time in seconds
";plan;setCycleTime;integer;[0-255];"Time plan nr
";securityCode;setCycleTime;string;[string];"Security code 2
";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0019;"Force input.
Force a given input (1-255) of the controllers general purpose I/O to either True or False. Can be used for all types of input where the traffic light controller must react to external control.
Can be used for bus priority, coordination between traffic controllers, external control systems, and much more.
Requires security code 2.";status;setInput;boolean;"-False
-True";"False: Release input
True: Force input";securityCode;setInput;string;[string];"Security code 2
";input;setInput;integer;[1-255];"Number of Input
";inputValue;setInput;boolean;"-False
-True";"False: input forced to False
True: input forced to True";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0020;"Force output.
Force a given output (1-255) of the controllers general purpose I/O to either True of False. Can be used for all types of output where the traffic light controller needs to control other equipment.
Can be used for bus priority, coordination between traffic controllers, external control systems, and much more.
Requires security code 2.";status;setOutput;boolean;"-False
-True";"False: Force output
True: Release output";securityCode;setOutput;string;[string];"Security code 2
";output;setOutput;integer;[1-255];"Number of Output
";outputValue;setOutput;boolean;"-False
-True";"False: output forced to False
True: output forced to True";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0021;"Set trigger level sensitivity for loop detector.
The trigger level sensitivity determines at what level a loop detector should trigger. If it set too low then then traffic will not be detected as intended. If it is set too high the detector might give false positives.
This command provides the ability to fine tune loop detectors to make sure they detect traffic as intended.
Requires security code 2";status;setLevel;string;[string];"Loop detector trigger level sensitivity is written as dd-ss where:
dd=loop detector number
ss=sensitivity value
";securityCode;setLevel;string;[string];"Security code 2
";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0022;"Request Signal Priority

Useful for bus priority or other type of priorities like emergency vehicles or groups of cyclists.

The benefit of using this message over activating inputs or detector logics is that you can specify a priority level, vehicle type and estimated time of arrival. You can also update or cancel the request, and use the corresponding status message to track the status of the request, including how much priority was actually given.

To understand how this command relates to ETSI/J2735, please see the [wiki](https://github.com/rsmp-nordic/rsmp_sxl_traffic_lights/wiki/Signal-priority-and-ETSI-J2735).

Activating signal priority is expected to provide more green time for a particular movement through the intersection, but the exact mechanism must typically be configured in the controller.

The movement to prioritize can be referenced in a number of ways, depending on what is configured in the controller, and in the system that sends priority requests. Either:

- Reference a signal group by setting ‘signalGroupId’. This method is simple, but will not allow you to have different priority mechanism for the same signal group, unless they can be distinguished by the vehicle type. For example, if you need to trigger different priorities depending on whether a bus goes straight or makes a turn for the same signal group, you need to use of the other referencing methods.
- Reference an input by setting ‘inputId’. This can be useful if you previously used inputs to activate priority. The input will not be activated, only the priority.
- Reference a connection by setting ‘connectionId’. A connection is a movement from a specific ingoing lane to a specific outgoing lane.
- Reference an intersection approach by setting ‘approachId’.
- Reference an ingoing lane by setting ‘laneInId’, and optionally also reference an outgoing lane by setting ‘laneOutId’.

Referencing attributes that are not used must be left out, rather than set to null or empty strings. This includes:

- signalGroupId
- inputId
- connectionId
- approachId
- laneInId
- laneOutId

Referencing attributes are only used when initiating a request. When updating or cancelling the request, the request is identified by its requestId, and no referencing attributes are allowed.

You initiate a priority request with type set to ‘new’. You must provide a request id that uniquely identifies the request on the controller. It can be a randomly generated UUID (universally unique identifier), or it can be constructed by combining e.g. a vehicle id and some other identifier. When updating or cancelling a request, you must pass the same request id again.

Providing ETA (estimated time of arrival) when initiating a request is optional, but can help the controller plan ahead in cases where you’re able to send the request before the vehicle arrives at the intersection. You’re allowed to initiate the request without an ETA and provide it in a later request update. But providing the ETA when initiating the request is recommended, since it will give the controller more time to plan ahead.

Like ETA, providing a vehicle type is optional, but can help the controller decide how to best handle the request.

The priority level provides a way to indicate the relative importance of the request compared to other requests. For example, emergency vehicles or delayed buses could be given a higher priority level.

If the ETA changes before the priority is cancelled, or you want to change the priority level, you can send another request message with type set to ‘update’. The vehicle type cannot be changed.

When you send a priority request, it will be processed to decide if it’s possible to activate the requested priority.

If the request is accepted, the priority can either be activated immediately, or if another priority is currently active, it can be queued for later activation.

If the priority cannot be accepted the request is rejected. Cooldown is a specific type of rejection, which means that s similar request has just completed, and some time needs to pass before a similar request can be activated.

When a request is queued, it is expected to become activated later, but in case too long passes without activation, the controller is expected to time out the request.

Once a priority is activated, you’re excepted to cancel it as soon as there’s no need for it anymore, typically when the vehicle has passed the intersection. You cancel a request by sending a request passing the existing request id setting the type to ‘cancel’.

If a request is never cancelled, the controller is expected to remove the priority at some point, but until then the priority might block requests in other direction which is why you should always cancel a priority when it’s not needed anymore.";requestId;requestPriority;string;[string];"A string that uniquely identifies the request on the controller
";signalGroupId;requestPriority;string;[string];"(Optional) ID of a signal group component.
";inputId;requestPriority;integer;[0-255];"(Optional) ID of an input, using the same numbering scheme as M0006
";connectionId;requestPriority;integer;[0-255];"(Optional) ID of a connection, connecting an ingoing and an outgoing lane
";approachId;requestPriority;integer;[0-16];"(Optional) ID of an intersection approach
";laneInId;requestPriority;integer;[0-255];"(Optional) ID of an ingoing lane
";laneOutId;requestPriority;integer;[0-255];"(Optional) ID of an outgoing lane
";priorityId;requestPriority;integer;[0-255];"(Optional) ID of a priority
";type;requestPriority;string;"-new
-update
-cancel";"new: New priority request
update: Update to existing priority request
cancel: Cancel an existing priority";level;requestPriority;integer;[0-14];"0: Lowest, 14: Highest
";eta;requestPriority;integer;[0-255];"(Optional) Estimated time of arrival to the intersection, in seconds
";vehicleType;requestPriority;string;"-pedestrian
-bicycle
-motorcycle
-car
-bus
-lightTruck
-heavyTruck
-tram
-emergency
-safetyCar
-specialTransport
-other";"(Optional) Vehicle type
pedestrian: Pedestrians
bicycle: Bicycles
motorcycle: Motorcycles
car: Passenger vehicle
bus: Bus used for public transport
lightTruck: Light truck
heavyTruck: Heavy truck
tram: Trams used for Public transport
emergency: Police, fire or ambulance
safetyCar: For e.g. escort vehicles
specialTransport: For e.g. heavy load
other: Other type of vehicle"
Traffic Light Controller;;M0023;"Set timeout for dynamic bands
Switch to a designated time plan if this timeout is reached due to lost connection with the supervisor.
Disable by setting timeout to '0'.
Used in conjunction with dynamic bands, M0014
Requires security code 2.";status;setTimeout;integer;[0-65535];"Timeout, in minutes
";securityCode;setTimeout;string;[string];"Security code 2
";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0103;"Set security code.
Change the security code to use when sending commands
Security codes are used as an extra layer of security in many commands. They need to match between the supervision system and the traffic light controller in order for the commands to be executed.";status;setSecurityCode;string;"-Level1
-Level2";"Level1: Change security code 1
Level2: Change security code 2";oldSecurityCode;setSecurityCode;string;[string];"Previous security code
";newSecurityCode;setSecurityCode;string;[string];"New security code
";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0104;"Set clock.
Can be used to manually set the clock of the traffic light controller if automatic  time synchronization (NTP or watchdog sync) is not available. For instance, during maintenance work.
Note: UTC is used.
Requires security code 1";securityCode;setDate;string;[string];"Security code 1
";year;setDate;integer;[0-9999];"Year
";month;setDate;integer;[1-12];"Month
";day;setDate;integer;[1-31];"Day of month
";hour;setDate;integer;[0-23];"Hour
";minute;setDate;integer;[0-59];"Minute
";second;setDate;integer;[0-59];"Second
";;;;;;;;;;;;;;;;;;;;;;;;;
