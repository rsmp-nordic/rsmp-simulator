# This workflow will build RSMPGS1 and RSMPGS2 and create installer

name: Build installer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build RSMPGS1
    runs-on: ubuntu-latest
    outputs:
      RSMPGS1: ${{ steps.rsmpgs1.outputs.test }}
      RSMPGS2: ${{ steps.rsmpgs2.outputs.test }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build RSMPGS1 (Release)
        run: xbuild /p:Configuration=Release RSMPGS1/RSMPGS1.sln

      - name: Build RSMPGS2 (Release)
        run: xbuild /p:Configuration=Release RSMPGS2/RSMPGS2.sln

      - id: rsmpgs1
        run: echo "rsmpgs1=`base64 RSMPGS1/bin/Release/RSMPGS1.exe`" >> "$GITHUB_OUTPUT"

      - id: rsmpgs2
        run: echo "rsmpgs2=`base64 RSMPGS2/bin/Release/RSMPGS2.exe`" >> "$GITHUB_OUTPUT"
  setup:
    name: Create Installer
    runs-on: windows-latest
    needs: build
    steps:
      - env:
          RSMPGS1: ${{needs.build.outputs.rsmpgs1}}
          RSMPGS2: ${{needs.build.outputs.rsmpgs2}}

        run: echo "$SETUP" > RSMPGS1.exe

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Building the installer
        run: |
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" "RSMPGS1\Setup\install_script.iss"
        shell: cmd

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: RSMPGS1
          path: RSMPGS1_1_0_1_7_Setup.exe

