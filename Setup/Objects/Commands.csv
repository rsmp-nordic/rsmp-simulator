Commands per object type;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Revision date:;yyyy-mm-dd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;Obs! Leading '-' should not exist in protocol level;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Functional position;;;;argument;;;;;argument;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
ObjectType;Object (optional);commandCodeId;Description;Name;Command;Type;Value;Comment;Name;Command;Type;Value;Comment;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Functional state;;;;argument;;;;;argument;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
ObjectType;Object (optional);commandCodeId;Description;Name;Command;Type;Value;Comment;Name;Command;Type;Value;Comment;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Manouver;;;;argument;;;;;argument;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
ObjectType;Object (optional);commandCodeId;Description;Name;Command;Type;Value;Comment;Name;Command;Type;Value;Comment;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Parameter;;;;argument;;;;;argument;;;;;argument;;;;;argument;;;;;argument;;;;;argument;;;;;;;;;
ObjectType;Object (optional);commandCodeId;Description;Name;Command;Type;Value;Comment;Name;Command;Type;Value;Comment;name;command;type;value;Comment;name;command;type;value;Comment;name;command;type;value;Comment;name;command;type;value;Comment;;;;;
Traffic Light Controller;;M0001;Sets functional position;status;setValue;string;-NormalControl
-YellowFlash
-Dark;NormalControl: Normal Control
YellowFlash: Enables yellow flash
Dark: Enables dark mode;securityCode;setValue;string;[text];Security code 2 ;timeout;setValue;integer;[0-1440];Time in minutes until controller automatically reverts to previous functional position.
0=no automatic return;intersection;setValue;integer;[0-255];Intersection number;;;;;;;;;;;;;;;
Traffic Light Controller;;M0002;Sets current time plan;status;setPlan;boolean;-False
-True;False: Controller uses time plan according to programming
True: Controller uses time plan according to command;securityCode;setPlan;string;[text];Security code 2;timeplan;setPlan;integer;[1-255];designation of time plan;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0003;Sets traffic situation the controller uses.;status;setTrafficSituation;boolean;-False
-True;False: Controller uses traffic situation according to own programming
True: Controller uses traffic situation according to command;securityCode;setTrafficSituation;string;[text];Security code 2;traficsituation;setTrafficSituation;integer;[1-255];designation of traficsituation;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0004;Restarts Traffic Light Controller;status;setRestart;boolean;-False
-True;True: Restart controller;securityCode;setRestart;string;[text];Security code 2;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0005;Activate emergency route;status;setEmergency;boolean;-False
-True;False: Activate emergency route
True: Deactivate emergency route;securityCode;setEmergency;string;[text];Security code 2;emergencyroute;setEmergency;integer;[1-255];Number of emergency route;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0006;Activate input;status;setInput;boolean;-False
-True;False: Deactivate input
True: Activate input;securityCode;setInput;string;[text];Security code 2;input;setInput;integer;[1-255];Number of Input;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0007;Activate fixed time control;status;setFixedTime;boolean;-False
-True;False: Deactivate fixed time control
True: Activate fixed time control;securityCode;setFixedTime;string;[text];Security code 2;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0012;Request start or stop of a series of signal groups.;status;setStart;string;[text];Orders signal groups to green or red. Sets a block of 16 signal groups at a time. Can be repeated to set several blocks of 16 signal groups. Values are separated with comma. Blocks are separated with semicolon. Since semicolon breaks the SXL csv-format, colon is used in example below.

1=Order signal group to green
0=Order signal group to red

Format: [Offset],[Bits to set],[Bits to unset]:…

Offset sets where the 16 inputs starts from followed by two 16 bit values telling which bit to set and unset in binary format, i.e. first bit have value 1 and last bit have value 32768.

Example 1:
5, 4134, 65 sets input 6,7,10,17 = on and 5,11 = off
(Input starts from no. 5 and bit 1,2,5,12 = 1 and bit 0,6 = 0)

Example 2:
22, 1, 4 sets input 22 = on and 24 = off
(Input starts from no. 22 and bit 0 = 1 and bit 2 = 0)

And both these examples could be sent in the same message as:
5,4143,65:22,1,4

Such a message would order signal group 6,7,10,17,22 to green and signal group 5,11,24 to red;securityCode;setStart;string;[text];Security code 2;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0013;Activate a series of inputs;status;setInput;string;[text];Sets/Unsets a block of 16 inputs at a time. Can be repeated to set several blocks of 16 inputs. Values are separated with comma. Blocks are separated with semicolon. Since semicolon breaks the SXL csv-format, colon, : is used in example below.

Format: [Offset],[Bits to set],[Bits to unset]:…

Offset sets where the 16 inputs starts from followed by two 16 bit values telling which bit to set and unset in binary format, i.e. first bit have value 1 and last bit have value 32768.

Example 1:
5, 4134, 65 sets input 6,7,10,17 = on and 5,11 = off
(Input starts from no. 5 and bit 1,2,5,12 = 1 and bit 0,6 = 0)

Example 2:
22, 1, 4 sets input 22 = on and 24 = off
(Input starts from no. 22 and bit 0 = 1 and bit 2 = 0)

And both thease examples could be sent in the same message as:
5,4143:65:22,1,4

Such a message would activate input 6,7,10,17,22 and deactivate input 5,11,24;securityCode;setInput;string;[text];Security code 2;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0014;Set dynamic bands;plan;setCommands;integer;[0-255];Plan to be changed;status;setCommands;string;[text];Dynamic bands.
Each dynamic band are written as dd-ee where:
dd=Dynamic band number (from 1-10)
ee=Extension in seconds in this band

Each dynamic band is separated with a comma.

E.g.
dd-ee,dd-ee;securityCode;setCommands;string;[text];Security code 2;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0015;Set Offset time;status;setOffset;integer;[0-255];Set offset time in seconds;plan;setOffset;integer;[0-255];Time plan nr;securityCode;setOffset;string;[text];Security code 2;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0016;Set week time table;status;setWeekTable;string;[text];Week time table. Defines time table to use for each week day
Each segment is written as d-t where:
d=day of week
t=time table nr

Day of week legend:
0=Monday
1=Tuesday
2=Wednesday
3=Thursday
4=Friday
5=Saturday
6=Sunday

Each segment is separated with a comma

E.g.
d-t,d-t;securityCode;setWeekTable;string;[text];Security code 2;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0017;Set time tables;status;setTimeTable;string;[text];Time Table. Defines time tables.
Each time definition is written as t-o-h-m where:
t=time table nr (1-12)
o=function
h=hour - switching time
m=minute - switching minute

Function legend:
0=no plan is selected by time table
1=set plan 1
…
16= set plan 16

hour and minute is using local time (not UTC)

Each time definition is separated with a comma.

E.g.
t-o-h-m,t-o-h-m
;securityCode;setTimeTable;string;[text];Security code 2;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0018;Set Cycle time;status;setCycleTime;integer;[1-255];Set cycle time in seconds;plan;setCycleTime;integer;[0-255];Time plan nr;securityCode;setCycleTime;string;[text];Security code 2;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0019;Force input;status;setInput;boolean;-False
-True;False: Force input
True: Release input;securityCode;setInput;string;[text];Security code 2;input;setInput;integer;[1-255];Number of Input;inputValue;setInput;boolean;-False
-True;False: input forced to False
True: input forced to True;;;;;;;;;;;;;;;
Traffic Light Controller;;M0020;Force output;status;setOutput;boolean;-False
-True;False: Force output
True: Release output;securityCode;setOutput;string;[text];Security code 2;output;setOutput;integer;[1-255];Number of Output;outputValue;setOutput;boolean;-False
-True;False: output forced to False
True: output forced to True;;;;;;;;;;;;;;;
Traffic Light Controller;;M0021;Set trigger level sensitivity for loop detector;status;setLevel;string;[text];Loop detector trigger level sensitivity is written as dd-ss where:
dd=loop detector number
ss=sensitivity value;securityCode;setLevel;string;[text];Security code 2;;;;;;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0103;Set security code;status;setSecurityCode;string;-Level1
-Level2;Level1: Change security code 1
Level2: Change security code 2;oldSecurityCode;setSecurityCode;string;[text];Previous security code;newSecurityCode;setSecurityCode;string;[text];New security code;;;;;;;;;;;;;;;;;;;;
Traffic Light Controller;;M0104;Set clock;securityCode;setDate;string;[text];Security code 1;year;setDate;integer;[YYYY];Changes internal clock. Note: UTC is used
Year according to YYYY;month;setDate;integer;[MM];Changes internal clock. Note: UTC is used
Month according to MM (01-12);day;setDate;integer;[DD];Changes internal clock. Note: UTC is used
Day in month according to DD (01-31);hour;setDate;integer;[HH];Changes internal clock. Note: UTC is used
Hour according to HH (00-23);minute;setDate;integer;[MM];Changes internal clock. Note: UTC is used
Minute according to MM (00-23);second;setDate;integer;[SS];Changes internal clock. Note: UTC is used
Second according to SS (00-59)
Signal group;SG1;M0010;Start of signal group. Orders a signal group to green.;status;setStart;boolean;-False
-True;False: No command (default)
True: Order a signal group to green;securityCode;setStart;string;[text];Security code 2;;;;;;;;;;;;;;;;;;;;;;;;;
Signal group;;M0011;Stop of signal group. Orders a signal group to red.;status;setStop;boolean;-False
-True;False: No command (default)
True: Order a signal group to red;securityCode;setStop;string;[text];Security code 2;;;;;;;;;;;;;;;;;;;;;;;;;
Detector logic;;M0008;Sets manual activation of detector logic;status;setForceDetectorLogic;boolean;-False
-True;False: Deactivate manual control of detector logic
True: Activate manual control of detector logic;securityCode;setForceDetectorLogic;string;[text];Security code 2;mode;setForceDetectorLogic;boolean;-False
-True;False: Deactivate detector logic
True: Activate detector logic;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
